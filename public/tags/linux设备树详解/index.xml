<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux设备树详解 on 悠创</title>
    <link>http://localhost:1313/Yocreative.github.io/tags/linux%E8%AE%BE%E5%A4%87%E6%A0%91%E8%AF%A6%E8%A7%A3/</link>
    <description>Recent content in Linux设备树详解 on 悠创</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Jan 2024 21:43:13 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/Yocreative.github.io/tags/linux%E8%AE%BE%E5%A4%87%E6%A0%91%E8%AF%A6%E8%A7%A3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【一文秒懂】Linux设备树详解</title>
      <link>http://localhost:1313/Yocreative.github.io/docs/linux/linux_driver_develop_basic/%E4%B8%80%E6%96%87%E7%A7%92%E6%87%82linux%E8%AE%BE%E5%A4%87%E6%A0%91%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 19 Jan 2024 21:43:13 +0800</pubDate>
      <guid>http://localhost:1313/Yocreative.github.io/docs/linux/linux_driver_develop_basic/%E4%B8%80%E6%96%87%E7%A7%92%E6%87%82linux%E8%AE%BE%E5%A4%87%E6%A0%91%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;h1 id=&#34;一文秒懂linux设备树详解&#34;&gt;&#xA;  【一文秒懂】Linux设备树详解&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80%e6%96%87%e7%a7%92%e6%87%82linux%e8%ae%be%e5%a4%87%e6%a0%91%e8%af%a6%e8%a7%a3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1linux设备树概念&#34;&gt;&#xA;  1、Linux设备树概念&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1linux%e8%ae%be%e5%a4%87%e6%a0%91%e6%a6%82%e5%bf%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Linux内核是从V2.6开始引入设备树的概念，其起源于&lt;code&gt;OF:OpenFirmware&lt;/code&gt;， 用于&lt;strong&gt;描述一个硬件平台的硬件资源信息&lt;/strong&gt;，这些信息包括：CPU的数量和类别、内存基地址和大小、总线和桥、外设连接、中断控制器和中断使用情况、GPIO控制器和GPIO使用情况、Clock控制器和Clock使用情况等等。&lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;color: blue;&#34;&gt;&lt;strong&gt;官方说明&lt;/strong&gt;：&lt;/span&gt;&lt;/p&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;The &amp;ldquo;Open Firmware Device Tree&amp;rdquo;, or simply Device Tree (DT), is a data structure and language for describing hardware.&lt;/p&gt;&#xA;&lt;p&gt;设备树是一种数据结构和一种用于描述硬件信息的语言。&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;设备树的特点&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;实现驱动代码与设备硬件信息相分离&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;通过被&lt;code&gt;bootloader(uboot)&lt;/code&gt;和&lt;code&gt;Linux&lt;/code&gt;传递到内核， 内核可以从设备树中获取对应的硬件信息。&lt;/li&gt;&#xA;&lt;li&gt;对于同一SOC的不同主板，只需更换设备树文件即可实现不同主板的无差异支持，而无需更换内核文件，实现了&lt;strong&gt;内核和不同板级硬件数据的拆分&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://doc.embedfire.com/linux/imx6/quick_start/zh/latest/_images/device_tree001.png&#34; alt=&#34;设备树&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;2设备树的由来&#34;&gt;&#xA;  2、设备树的由来&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2%e8%ae%be%e5%a4%87%e6%a0%91%e7%9a%84%e7%94%b1%e6%9d%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;明白了设备树的概念，不妨思考一下：&lt;span style=&#34;color: red;&#34;&gt;&lt;strong&gt;为什么要引入设备树？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;在&lt;code&gt;Linux&lt;/code&gt;内核v2.6版本以前，&lt;code&gt;ARM&lt;/code&gt;架构用于描述不同的硬件信息的文件都存放在&lt;code&gt;arch/arm/plat-xxx&lt;/code&gt;和&lt;code&gt;arch/arm/mach-xxx&lt;/code&gt;文件夹下，如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/image-20220802090504275.png&#34; alt=&#34;image-20220802090504275&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;在这些文件内，都是通过手动定义不同的硬件设备，步骤非常繁琐&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/image-20220802091036378.png&#34; alt=&#34;image-20220802091036378&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;这样就导致了&lt;code&gt;Linux&lt;/code&gt;内核代码中充斥着大量的垃圾代码，因为不同的板级他们的硬件信息都不相同，这些都是硬件特有的信息，对内核而言没有任何的意义，但是往往这部分代码特别的多，造成内核的冗余。&lt;/p&gt;&#xA;&lt;p&gt;&lt;span style=&#34;color: blue;&#34;&gt;&lt;strong&gt;设备树的引入就是为了解决这个问题&lt;/strong&gt;&lt;/span&gt;，通过引入设备树，我们可以直接通过它来传递给&lt;code&gt;Linux&lt;/code&gt;，而不再需要内核中大量的垃圾代码。&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;3设备树组成&#34;&gt;&#xA;  3、设备树组成&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3%e8%ae%be%e5%a4%87%e6%a0%91%e7%bb%84%e6%88%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;整个设备树牵涉面比较广，即增加了新的用于描述设备硬件信息的文本格式，又增加了编译这个文本的工具，同时还得支持&lt;code&gt;Bootloader&lt;/code&gt;解析设备树，并将信息传递给内核。&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;p&gt;整个设备树包含&lt;code&gt;DTC（device tree compiler）&lt;/code&gt;，&lt;code&gt;DTS（device tree source）&lt;/code&gt;和&lt;code&gt;DTB（device tree blob）&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/image-20220802091430298.png&#34; alt=&#34;image-20220802091430298&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;DTS（device tree source）&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;DTS&lt;/code&gt;是一种&lt;code&gt;ASCII&lt;/code&gt;文本格式的设备树描述，在&lt;code&gt;ARM Linux&lt;/code&gt;中，一个&lt;code&gt;dts&lt;/code&gt;文件对应一个&lt;code&gt;ARM&lt;/code&gt;的设备，该文件一般放在&lt;code&gt;arch/arm/boot/dts/&lt;/code&gt;目录中。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
