<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux NVMEM 子系统 on 悠创</title>
    <link>http://localhost:1313/Yocreative.github.io/docs/linux/linux_nvmem_subsystem/</link>
    <description>Recent content in Linux NVMEM 子系统 on 悠创</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Jan 2024 22:28:56 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/Yocreative.github.io/docs/linux/linux_nvmem_subsystem/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【NVMEM子系统深入剖析】一、Efuse介绍及安全启动浅析</title>
      <link>http://localhost:1313/Yocreative.github.io/docs/linux/linux_nvmem_subsystem/nvmem%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E4%B8%80efuse%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E5%85%A8%E5%90%AF%E5%8A%A8%E6%B5%85%E6%9E%90/</link>
      <pubDate>Thu, 18 Jan 2024 22:27:35 +0800</pubDate>
      <guid>http://localhost:1313/Yocreative.github.io/docs/linux/linux_nvmem_subsystem/nvmem%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E4%B8%80efuse%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E5%85%A8%E5%90%AF%E5%8A%A8%E6%B5%85%E6%9E%90/</guid>
      <description>&lt;h1 id=&#34;nvmem子系统深入剖析一efuse介绍及安全启动浅析&#34;&gt;&#xA;  【NVMEM子系统深入剖析】一、Efuse介绍及安全启动浅析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#nvmem%e5%ad%90%e7%b3%bb%e7%bb%9f%e6%b7%b1%e5%85%a5%e5%89%96%e6%9e%90%e4%b8%80efuse%e4%bb%8b%e7%bb%8d%e5%8f%8a%e5%ae%89%e5%85%a8%e5%90%af%e5%8a%a8%e6%b5%85%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1efuse是什么&#34;&gt;&#xA;  1、Efuse是什么&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1efuse%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;eFuse(electronic fuse)&lt;/code&gt;：电子保险丝，熔丝性的一种器件，属于&lt;strong&gt;一次性可编程存储器&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;之所以成为&lt;code&gt;eFuse&lt;/code&gt;，因为其原理像电子保险丝一样，&lt;code&gt;CPU&lt;/code&gt;出厂后，这片&lt;code&gt;eFuse&lt;/code&gt;空间内所有比特全为1，如果向一位比特写入0，那么就彻底烧死这个比特了，再也无法改变它的值，也就是再也回不去 1 了。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;一般&lt;code&gt;OEM&lt;/code&gt;从&lt;code&gt;CPU&lt;/code&gt;厂商购买芯片后，一般都要烧写&lt;code&gt;eFuse&lt;/code&gt;，用于标识自己公司的版本信息，运行模式等相关信息。&lt;/p&gt;&#xA;&lt;p&gt;同时，由于其&lt;strong&gt;一次性编程&lt;/strong&gt;的特性，我们又将其用在&lt;code&gt;Secure Boot&lt;/code&gt;安全启动中。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;2otp是什么&#34;&gt;&#xA;  2、OTP是什么&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2otp%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;了解完&lt;code&gt;eFuse&lt;/code&gt;后，我们就顺便了解一下&lt;code&gt;OTP&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;OTP(One Time Programmable)&lt;/code&gt;是反熔丝的一种器件，就是说，当&lt;code&gt;OTP&lt;/code&gt;存储单元未击穿时，它的逻辑状态为&lt;code&gt;0&lt;/code&gt;；当击穿时，它的逻辑状态为&lt;code&gt;1&lt;/code&gt;，也属于&lt;strong&gt;一次性可编程存储器&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;它的物理状态和逻辑状态正好和&lt;code&gt;eFuse&lt;/code&gt;相反！&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/img_convert/abd0b273ba06e74bf7e75322b813dfe1.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;两者区别如下&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;从成本上讲，&lt;code&gt;eFuse&lt;/code&gt;器件基本上是各个&lt;code&gt;Foundry&lt;/code&gt;厂自己提供，因此通常意味着免费或者很少的费用，而&lt;code&gt;OTP&lt;/code&gt;器件则通常是第三方&lt;code&gt;IP&lt;/code&gt;厂家提供，这就要收费。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;从器件面积上讲，eFuse的cell的面积更大，所以仅仅有小容量的器件可以考虑。当然如果需要大容量的，也可以多个eFuse Macro拼接，但是这意味着芯片面积的增加，成本也会增加；OTP的cell面积很小，所有相对来讲，可以提供更大容量的Macro可供使用。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;OTP&lt;/code&gt; 比 &lt;code&gt;eFuse&lt;/code&gt; 安全性更好，&lt;code&gt;eFuse&lt;/code&gt;的编程位可以通过电子显微镜看到，因此其存储的内容可以被轻易破解，但&lt;code&gt;OTP&lt;/code&gt;在显微镜下无法区分编程位和未编程位，因此无法读取数据。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;eFuse&lt;/code&gt;默认导通，存储的是&amp;quot;1&amp;quot;，而&lt;code&gt;OTP&lt;/code&gt;默认是断开，存储的是&amp;quot;0&amp;quot;，因此&lt;code&gt;OTP&lt;/code&gt;的功耗也较&lt;code&gt;eFuse&lt;/code&gt;小，面积也较&lt;code&gt;eFuse&lt;/code&gt;小。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;3什么是secure-boot&#34;&gt;&#xA;  3、什么是Secure Boot&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3%e4%bb%80%e4%b9%88%e6%98%afsecure-boot&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;上面我们也了解过了，&lt;code&gt;efuse&lt;/code&gt;主要用于记录一些&lt;code&gt;OEM&lt;/code&gt;的产品信息，并且也会用于安全启动，那么安全启动是什么，为什么要做安全启动？&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;安全启动&lt;code&gt;Secure Boot&lt;/code&gt;，其主要目的是：&lt;strong&gt;以限制消费者能力，防止消费者从软硬件层面，对产品的部分关键系统进行读写，调试等高级权限，达到对产品的商业保密，知识产权的保护。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;安全启动的安全模型是建立在消费者是攻击者的假设之上&lt;/strong&gt;，一般常见的操作有：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;刷机安装自定义的操作系统&lt;/li&gt;&#xA;&lt;li&gt;绕过厂家封闭的支付平台&lt;/li&gt;&#xA;&lt;li&gt;绕过系统保护，复制厂家保护的数字产品。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;除此之外呢，有的比较专业的消费者，还可以&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用数字示波器监听 &lt;code&gt;CPU&lt;/code&gt; 和 &lt;code&gt;RAM&lt;/code&gt; 、&lt;code&gt;eMMC&lt;/code&gt; 之间的数据传输来读取非常底层的数据传输&lt;/li&gt;&#xA;&lt;li&gt;而且像 &lt;code&gt;eMMC&lt;/code&gt; 这种芯片通常都是业界标准化的，攻击者甚至可以把芯片拆下来，然后用市面上现成的通用 &lt;code&gt;eMMC&lt;/code&gt; 编程工具来读写上面的内容。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pic3.zhimg.com/80/v2-8f198e2693ecd4de2230f6b811c4dc52_720w.webp&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;安全启动等级也有一个上限：这个上限通常是认为攻击者不至于能够剥离芯片的封装，然后用电子显微镜等纳米级别精度的显像设备来逆向芯片的内部结构。&lt;/p&gt;&#xA;&lt;p&gt;简单来说：&lt;strong&gt;能成功攻破芯片安全机制的一次性投资成本至少需要在十万美元以上才可以认为是安全的。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;4cpu内部安全机制&#34;&gt;&#xA;  4、CPU内部安全机制&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4cpu%e5%86%85%e9%83%a8%e5%ae%89%e5%85%a8%e6%9c%ba%e5%88%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pic2.zhimg.com/80/v2-d34291945629ea974d0254936616e541_720w.webp&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;41-bootrom&#34;&gt;&#xA;  4.1 bootROM&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#41-bootrom&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;BootROM&lt;/code&gt;是集成在&lt;code&gt;CPU&lt;/code&gt;芯片的一个&lt;code&gt;ROM&lt;/code&gt;空间，其主要用于存放一小段可执行程序，出厂的时候被烧录进去写死，不可修改。&lt;/p&gt;</description>
    </item>
    <item>
      <title>【NVMEM子系统深入剖析】二、NVMEM驱动框架</title>
      <link>http://localhost:1313/Yocreative.github.io/docs/linux/linux_nvmem_subsystem/nvmem%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E4%BA%8Cnvmem%E9%A9%B1%E5%8A%A8%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Thu, 18 Jan 2024 22:27:58 +0800</pubDate>
      <guid>http://localhost:1313/Yocreative.github.io/docs/linux/linux_nvmem_subsystem/nvmem%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E4%BA%8Cnvmem%E9%A9%B1%E5%8A%A8%E6%A1%86%E6%9E%B6/</guid>
      <description>&lt;h1 id=&#34;nvmem子系统深入剖析二nvmem驱动框架&#34;&gt;&#xA;  【NVMEM子系统深入剖析】二、NVMEM驱动框架&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#nvmem%e5%ad%90%e7%b3%bb%e7%bb%9f%e6%b7%b1%e5%85%a5%e5%89%96%e6%9e%90%e4%ba%8cnvmem%e9%a9%b1%e5%8a%a8%e6%a1%86%e6%9e%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1前言&#34;&gt;&#xA;  1、前言&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1%e5%89%8d%e8%a8%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;NVMEM SUBSYSTEM&lt;/code&gt;，该子系统整体架构不算太大，还是比较容易去理解的，下面我们一起去一探究竟！&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;NVMEM（Non Volatile Memory）&lt;/code&gt;，该子系统主要用于实现&lt;code&gt;EEPROM&lt;/code&gt;、&lt;code&gt;Efuse&lt;/code&gt;等非易失存储器的统一管理。&lt;/p&gt;&#xA;&lt;p&gt;在早期，像&lt;code&gt;EEPROM&lt;/code&gt;驱动是存放于&lt;code&gt;/drivers/misc&lt;/code&gt;目录下，由于没有做到好的抽象，每次需要去访问相应内存空间，都需要去复制几乎一样的代码，去注册&lt;code&gt;sysfs&lt;/code&gt;，这是一个相当大的抽象泄露。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;NVMEM&lt;/code&gt;子系统就是为了解决以往的抽象泄露问题。&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;2驱动框架&#34;&gt;&#xA;  2、驱动框架&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2%e9%a9%b1%e5%8a%a8%e6%a1%86%e6%9e%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;该驱动框架较为简单，也适合初学者去熟悉基本的驱动框架。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/image-20230210071204144.png&#34; alt=&#34;image-20230210071204144&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;应用层&lt;/strong&gt;：可以通过用户空间所提供的文件节点，来读取或者修改&lt;code&gt;nvmem&lt;/code&gt;存储器的数据。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;NVMEM 核心层&lt;/strong&gt;：统一管理&lt;code&gt;NVMEM&lt;/code&gt;设备，向上实现文件系统接口数据的传递，向下提供统一的注册，注销&lt;code&gt;nvmem&lt;/code&gt;设备接口。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;NVMEM 总线驱动&lt;/strong&gt;：注册&lt;code&gt;NVMEM&lt;/code&gt;总线，实现&lt;code&gt;NVMEM&lt;/code&gt;控制器的底层代码实现。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;nvmem&lt;/code&gt;子系统提供读写存储器的接口有两种，一种是通过文件系统读写，一种是在内核驱动直接读写。&lt;/p&gt;&#xA;&lt;p&gt;对于&lt;code&gt;EEPROM&lt;/code&gt;，其可以进行读写操作，而对于&lt;code&gt;efuse&lt;/code&gt;，更多用于读取密钥信息，进而判断镜像是否被篡改，在用户空间是不允许被更改的。&lt;/p&gt;&#xA;&lt;p&gt;这种是通过驱动提供的开放接口，直接获取指定位置的数据，详细的后面展开来说。&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;3源码目录结构&#34;&gt;&#xA;  3、源码目录结构&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3%e6%ba%90%e7%a0%81%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ketnel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── driver&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   └── nvmem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   ├──&#x9;core.c&#x9;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#6272a4&#34;&gt;# NVMEM核心层&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   ├──&#x9;rockchip-efuse.c&#x9;&#x9;&lt;span style=&#34;color:#6272a4&#34;&gt;# NVMEM总线驱动&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;4用户空间下的目录结构&#34;&gt;&#xA;  4、用户空间下的目录结构&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4%e7%94%a8%e6%88%b7%e7%a9%ba%e9%97%b4%e4%b8%8b%e7%9a%84%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;我们可以在用户空间去读取/写入数据，其所在的目录：&lt;code&gt;/sys/bus/nvmem/devices/dev-name/nvmem&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hexdump /sys/bus/nvmem/devices/qfprom0/nvmem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0000000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00000a0 db10 &lt;span style=&#34;color:#bd93f9&#34;&gt;2240&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; e000 0c00 0c00 &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; 0c00&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0000000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0001000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; &lt;/p&gt;</description>
    </item>
    <item>
      <title>【NVMEM子系统深入剖析】三、核心数据结构及内在关联</title>
      <link>http://localhost:1313/Yocreative.github.io/docs/linux/linux_nvmem_subsystem/nvmem%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E4%B8%89%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8F%8A%E5%86%85%E5%9C%A8%E5%85%B3%E8%81%94/</link>
      <pubDate>Thu, 18 Jan 2024 22:28:56 +0800</pubDate>
      <guid>http://localhost:1313/Yocreative.github.io/docs/linux/linux_nvmem_subsystem/nvmem%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E4%B8%89%E6%A0%B8%E5%BF%83%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8F%8A%E5%86%85%E5%9C%A8%E5%85%B3%E8%81%94/</guid>
      <description>&lt;div align=center&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/202206141400958.jpeg&#34; alt=&#34;0c70cff6aab3f2894c2bfd2c973e9620&#34; alt=&#34;img&#34;  width = 15% height =15%/&gt;&lt;/div&gt;&#xA;&lt;center&gt;&lt;font color =&#34;grey&#34;&gt;我的圈子：&lt;a href=&#34;https://t.zsxq.com/14hPUwE8z&#34;&gt;&#xA;高级工程师聚集地&lt;/a&gt;&lt;/font&gt;&lt;/center&gt;&#xA;&lt;center&gt;&lt;b&gt; 创作理念：专注分享高质量嵌入式文章，让大家读有所得！&lt;/b&gt;&lt;/center&gt;&#xA;&lt;div align=center&gt;&lt;img src=&#34;https://bdn.135editor.com/files/images/editor_styles/d1c723e7e296ca791c2fb3b39ebee0f3.jpg&#34; alt=&#34;img&#34; width = 70% height =10%/&gt;&#xA;&lt;/div&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&amp;nbsp;&#xA;亲爱的读者，你好：&#xA;&lt;p&gt;  感谢你对我的专栏的关注和支持，我很高兴能和你分享我的知识和经验。如果你喜欢我的内容，想要阅读更多的精彩技术文章，可以扫码加入我的社群。&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;center&gt;&lt;b&gt; &lt;font color =&#34;blue&#34;&gt;欢迎关注【嵌入式艺术】，董哥原创！&lt;/font&gt;&lt;/b&gt;&lt;/center&gt;&#xA;&lt;div align=center&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/blog.png&#34; alt=&#34;img&#34; width = &#34;60%&#34; height =&#34;10%&#34;/&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>【NVMEM子系统深入剖析】四、efuse驱动实现流程</title>
      <link>http://localhost:1313/Yocreative.github.io/docs/linux/linux_nvmem_subsystem/nvmem%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E5%9B%9Befuse%E9%A9%B1%E5%8A%A8%E5%AE%9E%E7%8E%B0%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Thu, 18 Jan 2024 22:28:17 +0800</pubDate>
      <guid>http://localhost:1313/Yocreative.github.io/docs/linux/linux_nvmem_subsystem/nvmem%E5%AD%90%E7%B3%BB%E7%BB%9F%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E5%9B%9Befuse%E9%A9%B1%E5%8A%A8%E5%AE%9E%E7%8E%B0%E6%B5%81%E7%A8%8B/</guid>
      <description>&lt;div align=center&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/202206141400958.jpeg&#34; alt=&#34;0c70cff6aab3f2894c2bfd2c973e9620&#34; alt=&#34;img&#34;  width = 15% height =15%/&gt;&lt;/div&gt;&#xA;&lt;center&gt;&lt;font color =&#34;grey&#34;&gt;我的圈子：&lt;a href=&#34;https://t.zsxq.com/14hPUwE8z&#34;&gt;&#xA;高级工程师聚集地&lt;/a&gt;&lt;/font&gt;&lt;/center&gt;&#xA;&lt;center&gt;&lt;b&gt; 创作理念：专注分享高质量嵌入式文章，让大家读有所得！&lt;/b&gt;&lt;/center&gt;&#xA;&lt;div align=center&gt;&lt;img src=&#34;https://bdn.135editor.com/files/images/editor_styles/d1c723e7e296ca791c2fb3b39ebee0f3.jpg&#34; alt=&#34;img&#34; width = 70% height =10%/&gt;&#xA;&lt;/div&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&amp;nbsp;&#xA;亲爱的读者，你好：&#xA;&lt;p&gt;  感谢你对我的专栏的关注和支持，我很高兴能和你分享我的知识和经验。如果你喜欢我的内容，想要阅读更多的精彩技术文章，可以扫码加入我的社群。&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;center&gt;&lt;b&gt; &lt;font color =&#34;blue&#34;&gt;欢迎关注【嵌入式艺术】，董哥原创！&lt;/font&gt;&lt;/b&gt;&lt;/center&gt;&#xA;&lt;div align=center&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/blog.png&#34; alt=&#34;img&#34; width = &#34;60%&#34; height =&#34;10%&#34;/&gt;&#xA;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
