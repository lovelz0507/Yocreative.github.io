<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Uboot开发 on 悠创</title>
    <link>http://localhost:1313/Yocreative.github.io/docs/uboot/</link>
    <description>Recent content in Uboot开发 on 悠创</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jan 2024 21:31:50 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/Yocreative.github.io/docs/uboot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一、uboot基础了解</title>
      <link>http://localhost:1313/Yocreative.github.io/docs/uboot/%E4%B8%80uboot%E5%9F%BA%E7%A1%80%E4%BA%86%E8%A7%A3/</link>
      <pubDate>Fri, 17 Nov 2023 20:50:32 +0800</pubDate>
      <guid>http://localhost:1313/Yocreative.github.io/docs/uboot/%E4%B8%80uboot%E5%9F%BA%E7%A1%80%E4%BA%86%E8%A7%A3/</guid>
      <description>&lt;h1 id=&#34;一uboot基础了解&#34;&gt;&#xA;  一、uboot基础了解&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%80uboot%e5%9f%ba%e7%a1%80%e4%ba%86%e8%a7%a3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/974ad967a6b74a27888c66746ba1d04a.png&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-u-boot是什么&#34;&gt;&#xA;  1. U-boot是什么&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-u-boot%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;U-Boot&lt;/code&gt;，全称 &lt;code&gt;Universal Boot Loader&lt;/code&gt;，是遵循GPL条款的从FADSROM、8xxROM、PPCBOOT逐步发展演化而来的 &lt;strong&gt;开放源码项目&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;U-boot&lt;/code&gt;，是一个主要用于嵌入式系统的引导加载程序，可以支持多种不同的计算机系统结构，其主要作用为：==&lt;strong&gt;引导系统的启动！&lt;/strong&gt;==目前，U-Boot不仅支持Linux系统的引导，还支持NetBSD, VxWorks, QNX, RTEMS, ARTOS, LynxOS, android等多种嵌入式操作系统。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-u-boot主要特性及功能&#34;&gt;&#xA;  2. U-boot主要特性及功能&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-u-boot%e4%b8%bb%e8%a6%81%e7%89%b9%e6%80%a7%e5%8f%8a%e5%8a%9f%e8%83%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;开放&lt;/strong&gt;：开放的源代码&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;多平台&lt;/strong&gt;：支持多种嵌入式操作系统，如Linux、NetBSD、android等&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;生态&lt;/strong&gt;：有丰富的设备驱动源码，如以太网、SDRAM、LCD等，同时也具有丰富的开发文档。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-u-boot下载地址&#34;&gt;&#xA;  3. U-boot下载地址&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-u-boot%e4%b8%8b%e8%bd%bd%e5%9c%b0%e5%9d%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Uboot开发源码：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://source.denx.de/u-boot/u-boot&#34;&gt;https://source.denx.de/u-boot/u-boot&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ftp.denx.de/pub/u-boot/&#34;&gt;https://ftp.denx.de/pub/u-boot/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;其他厂商定制的uboot源码：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Embedfire/ebf_products/tree/master/documentation&#34;&gt;野火&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4-u-boot目录结构&#34;&gt;&#xA;  4. U-boot目录结构&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4-u-boot%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;目录&lt;/th&gt;&#xA;          &lt;th&gt;含义&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;arch&lt;/td&gt;&#xA;          &lt;td&gt;各个厂商的硬件信息，目录下包括支持的处理器类型&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;arch/arm/cpu/xxx&lt;/td&gt;&#xA;          &lt;td&gt;**每一个子文件夹，包含一种cpu系列。**每个子文件夹下包含cpu.c（CPU初始化），interrupts.c（设置中断和异常），start.S（U-boot的启动文件，早期的初始化）。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;board&lt;/td&gt;&#xA;          &lt;td&gt;与开发板有关，&lt;strong&gt;每一个子文件夹代表一个芯片厂家&lt;/strong&gt;，芯片厂家下，每一个子文件夹，表示一个开发板&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;common&lt;/td&gt;&#xA;          &lt;td&gt;存放与处理器体系无关的通用代码，可以说为&lt;strong&gt;通用核心代码！&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;cmd&lt;/td&gt;&#xA;          &lt;td&gt;存放uboot的相关命令实现部分&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;drivers&lt;/td&gt;&#xA;          &lt;td&gt;存放外围芯片驱动，网卡，USB等&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;disk&lt;/td&gt;&#xA;          &lt;td&gt;存放驱动磁盘的分区处理代码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;fs&lt;/td&gt;&#xA;          &lt;td&gt;本目录下存放文件系统相关代码，&lt;strong&gt;每一个子文件夹表示文件系统&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;net&lt;/td&gt;&#xA;          &lt;td&gt;网络协议相关代码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;doc&lt;/td&gt;&#xA;          &lt;td&gt;uboot说明文档&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;include&lt;/td&gt;&#xA;          &lt;td&gt;各种头文件&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;post&lt;/td&gt;&#xA;          &lt;td&gt;上电自检代码&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;api&lt;/td&gt;&#xA;          &lt;td&gt;外部扩展程序的API和示例&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;tools&lt;/td&gt;&#xA;          &lt;td&gt;编译S-Record或者U-boot镜像的相关工具&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;5-如何编译uboot&#34;&gt;&#xA;  5. 如何编译Uboot&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#5-%e5%a6%82%e4%bd%95%e7%bc%96%e8%af%91uboot&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make ARCH&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;arm CROSS_COMPILE&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;arm&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;linux&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;gnueabihf&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt; distclean&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make ARCH&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;arm CORSS_COMPILE&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;arm&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;linux&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;gnueabihf&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt; colibri&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;imx6ull_defconfig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make V&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt; ARCH&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;arm CROSS_COMPILE&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;arm&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;linux&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;gnueabihf&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;j8&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ARCH=arm&lt;/code&gt;：arm架构&lt;/p&gt;</description>
    </item>
    <item>
      <title>二、uboot启动流程分析</title>
      <link>http://localhost:1313/Yocreative.github.io/docs/uboot/%E4%BA%8Cuboot%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/</link>
      <pubDate>Fri, 17 Nov 2023 22:11:57 +0800</pubDate>
      <guid>http://localhost:1313/Yocreative.github.io/docs/uboot/%E4%BA%8Cuboot%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/</guid>
      <description>&lt;h1 id=&#34;二uboot启动流程分析&#34;&gt;&#xA;  二、uboot启动流程分析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8cuboot%e5%90%af%e5%8a%a8%e6%b5%81%e7%a8%8b%e5%88%86%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/UNIONDONG/Get_Pic_Url/Media202203071811279.png&#34; alt=&#34;Uboot启动流程&#34; /&gt;&lt;/p&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;上一篇文章：&lt;a href=&#34;https://blog.csdn.net/dong__ge/article/details/122199992&#34;&gt;（一）uboot基础了解&lt;/a&gt; 下一篇文章：&lt;a href=&#34;https://blog.csdn.net/dong__ge/article/details/122637220&#34;&gt;（三）Uboot驱动模型&lt;/a&gt;&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;p&gt;同大多数的Bootloader一样，uboot的启动过程也分为BL1、BL2两个阶段，分别对应着&lt;code&gt;SPL&lt;/code&gt;和&lt;code&gt;Uboot&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;SPL（BL1阶段）&lt;/strong&gt;：负责开发板的基础配置和设备初始化，并且搬运Uboot到内存中，由汇编代码和少量的C语言实现&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Uboot（BL2阶段）&lt;/strong&gt;：主要负责初始化外部设备，引导Kernel启动，由纯C语言实现。&lt;/p&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;我们这篇文章，主要介绍Uboot（BL2阶段）的启动流程，BL1阶段启动流程的详细分析，可以见我的后续文章。想要深入了解的，可以好好研究下！&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2021/12/02/dXOn3fe91FZQWzq.jpg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;21程序执行流程图&#34;&gt;&#xA;  2.1、程序执行流程图&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#21%e7%a8%8b%e5%ba%8f%e6%89%a7%e8%a1%8c%e6%b5%81%e7%a8%8b%e5%9b%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;我们先总体来看一下Uboot的执行步骤，这里以EMMC作为启动介质，进行分析！&lt;/p&gt;&#xA;&lt;p&gt;无论是哪种启动介质，基本流程都相似，我们这就往下看！&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/UNIONDONG/Get_Pic_Url/Media202202101913627.png&#34; alt=&#34;image-20220210191302537&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;==打开图片，结合文档、图片、代码进行理解！==&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;22u-bootldsuboot的入口函数&#34;&gt;&#xA;  2.2、u-boot.lds——Uboot的入口函数&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#22u-bootldsuboot%e7%9a%84%e5%85%a5%e5%8f%a3%e5%87%bd%e6%95%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;u-boot.lds&lt;/code&gt;：是uboot工程的链接脚本文件，对于工程的编译和链接有非常重要的作用，决定了uboot的组装，并且&lt;code&gt;u-boot.lds&lt;/code&gt;链接文件中的&lt;code&gt;ENTRY(_start)&lt;/code&gt;指定了uboot程序的入口地址。&lt;/p&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;如果不知道&lt;code&gt;u-boot.lds&lt;/code&gt;放到在哪里，可以通过&lt;code&gt;find -name u-boot.lds&lt;/code&gt;查找，根目录要进入到uboot的源码的位置哦！&lt;/p&gt;&#xA;&lt;p&gt;如果查找结果有很多，结合自己的板子信息，确定自己使用的&lt;code&gt;u-boot.lds&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;当然，准确的方法是查看Makefile文件，分析出来&lt;code&gt;u-boot.lds&lt;/code&gt;所生成的位置。&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;p&gt;在&lt;code&gt;u-boot.lds&lt;/code&gt;的文件中，可以看到&lt;code&gt;.text&lt;/code&gt;段，存放的就是执行的文本段。截取部分代码段如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;OUTPUT_FORMAT&lt;/span&gt;(&amp;#34;elf32-littlearm&amp;#34;, &amp;#34;elf32-littlearm&amp;#34;, &amp;#34;elf32-littlearm&amp;#34;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;OUTPUT_ARCH&lt;/span&gt;(arm)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;ENTRY&lt;/span&gt;(_start)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;SECTIONS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; . = 0&lt;span style=&#34;color:#50fa7b&#34;&gt;x00000000&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;;&#x9;&#x9;&#x9;&#x9;@起始地址&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt; . = &lt;span style=&#34;color:#50fa7b&#34;&gt;ALIGN&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;)&lt;span style=&#34;color:#6272a4&#34;&gt;;&#x9;&#x9;&#x9;&#x9;&#x9;@四字节对齐&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;.text&lt;/span&gt; :&#x9;&#x9;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  *(.__image_copy_start)&#x9;&#x9;@映像文件复制起始地址&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  *(&lt;span style=&#34;color:#50fa7b&#34;&gt;.vectors&lt;/span&gt;)&#x9;&#x9;&#x9;&#x9;&#x9;@异常向量表&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#50fa7b&#34;&gt;arch&lt;/span&gt;/arm/cpu/armv7/start.o (.text*)&#x9;@启动函数&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;......&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;ENTRY(_start)&lt;/code&gt;：程序的入口函数，&lt;code&gt;_start&lt;/code&gt;在&lt;code&gt;arch/arm/lib/vectors.S&lt;/code&gt;中定义&lt;code&gt;.globl _start&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>三、Uboot驱动模型</title>
      <link>http://localhost:1313/Yocreative.github.io/docs/uboot/%E4%B8%89uboot%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Wed, 17 Jan 2024 21:28:52 +0800</pubDate>
      <guid>http://localhost:1313/Yocreative.github.io/docs/uboot/%E4%B8%89uboot%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9E%8B/</guid>
      <description>&lt;h1 id=&#34;三uboot驱动模型&#34;&gt;&#xA;  三、Uboot驱动模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%89uboot%e9%a9%b1%e5%8a%a8%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/UNIONDONG/Get_Pic_Url/Media202201221422561.jpg&#34; alt=&#34;Uboot驱动模型&#34; /&gt;&lt;/p&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;全文耗时一周，精心汇总，希望对大家有所帮助，感觉可以的点赞，关注，不迷路，后续还有更多干货！&lt;/p&gt;&#xA;&lt;p&gt;看文章前，答应我，静下心来，慢慢品！&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;h2 id=&#34;31什么是uboot驱动模型&#34;&gt;&#xA;  3.1、什么是Uboot驱动模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#31%e4%bb%80%e4%b9%88%e6%98%afuboot%e9%a9%b1%e5%8a%a8%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;学过Linux的朋友基本都知道Linux的设备驱动模型，Uboot根据Linux的驱动模型架构，也引入了Uboot的驱动模型（&lt;strong&gt;driver model ：DM&lt;/strong&gt;）。&lt;/p&gt;&#xA;&lt;p&gt;**这种驱动模型为驱动的定义和访问接口提供了统一的方法。**提高了驱动之间的兼容性以及访问的标准型，uboot驱动模型和kernel中的设备驱动模型类似。&lt;/p&gt;&#xA;&lt;h2 id=&#34;32为什么要有驱动模型呢&#34;&gt;&#xA;  3.2、为什么要有驱动模型呢&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#32%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e6%9c%89%e9%a9%b1%e5%8a%a8%e6%a8%a1%e5%9e%8b%e5%91%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;无论是Linux还是Uboot，一个新对象的产生必定有其要解决的问题，驱动模型也不例外！&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;提高代码的可重用性&lt;/strong&gt;：为了能够使代码在不同硬件平台，不同体系架构下运行，必须要最大限度的提高代码的可重用性。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;高内聚，低耦合&lt;/strong&gt;：分层的思想也是为了达到这一目标，低耦合体现在对外提供统一的抽象访问接口，高内聚将相关度紧密的集中抽象实现。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;便于管理&lt;/strong&gt;：在不断发展过程中，硬件设备越来越多，驱动程序也越来越多，为了更好的管理驱动，也需要一套优秀的驱动架构！&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;33如何使用uboot的dm模型&#34;&gt;&#xA;  3.3、如何使用uboot的DM模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#33%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8uboot%e7%9a%84dm%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;DM模型的使用，可以通过menuconfig来配置。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;make menuconfig&lt;/code&gt;&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;h3 id=&#34;menuconfig配置全局dm模型&#34;&gt;&#xA;  ①：menuconfig配置全局DM模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#menuconfig%e9%85%8d%e7%bd%ae%e5%85%a8%e5%b1%80dm%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Device Drivers -&amp;gt;  Generic Driver Options -&amp;gt; Enable Driver Model  &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过上面的路径来打开&lt;code&gt;Driver Model&lt;/code&gt;模型，最终配置在&lt;code&gt;.config&lt;/code&gt;文件中，&lt;code&gt;CONFIG_DM=y&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;指定某个驱动的dm模型&#34;&gt;&#xA;  ②：指定某个驱动的DM模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8c%87%e5%ae%9a%e6%9f%90%e4%b8%aa%e9%a9%b1%e5%8a%a8%e7%9a%84dm%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;全局的DM模型打开后，我们对于不通的驱动模块，使能或者失能DM功能。如MMC驱动为例：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Device Drivers -&amp;gt; MMC Host controller Support -&amp;gt; Enable MMC controllers using Driver Model&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最终反映在&lt;code&gt;.config&lt;/code&gt;文件中的&lt;code&gt;CONFIG_DM_MMC=y&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;在对应的驱动中，可以看到判断&lt;code&gt;#if !CONFIG_IS_ENABLED(DM_MMC)&lt;/code&gt;，来判断是否打开DM驱动模型。&lt;/p&gt;&#xA;&lt;p&gt;在管理驱动的&lt;code&gt;Makefile&lt;/code&gt;文件中，也能看到&lt;code&gt;obj-$(CONFIG_$(SPL_)DM_MMC) += mmc-uclass.o&lt;/code&gt;，来判断是否将驱动模型加入到编译选项中。&lt;/p&gt;&#xA;&lt;p&gt;总之，我们要打开DM模型，最后反映在几个配置信息上：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;CONFIG_DM=y&lt;/code&gt;，全局DM模型打开&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CONFIG_DM_XXX=y&lt;/code&gt;，某个驱动的DM模型的打开&lt;/li&gt;&#xA;&lt;li&gt;可以通过&lt;code&gt;Kconifg&lt;/code&gt;、&lt;code&gt;Makefile&lt;/code&gt;来查看对应宏的编译情况&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2021/12/02/dXOn3fe91FZQWzq.jpg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>四、Uboot命令行模式分析</title>
      <link>http://localhost:1313/Yocreative.github.io/docs/uboot/%E5%9B%9Buboot%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%A8%A1%E5%BC%8F%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 17 Jan 2024 21:31:50 +0800</pubDate>
      <guid>http://localhost:1313/Yocreative.github.io/docs/uboot/%E5%9B%9Buboot%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%A8%A1%E5%BC%8F%E5%88%86%E6%9E%90/</guid>
      <description>&lt;h1 id=&#34;四uboot命令行模式分析&#34;&gt;&#xA;  四、Uboot命令行模式分析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9b%9buboot%e5%91%bd%e4%bb%a4%e8%a1%8c%e6%a8%a1%e5%bc%8f%e5%88%86%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/202205312213482.png&#34; alt=&#34;四、Uboot命令行模式分析&#34; /&gt;&lt;/p&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;前几篇文章，我们也了解了&lt;code&gt;Uboot&lt;/code&gt;的启动流程，那么这节就主要讲讲&lt;code&gt;Uboot&lt;/code&gt;的命令行模式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;另外，文章末尾还提供&lt;code&gt;eMMC5.1官方标准协议.pdf&lt;/code&gt;和&lt;code&gt;eMMC4.51官方标准协议-中文.pdf&lt;/code&gt;下载渠道，方便深入了解底层协议。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;正文如下&lt;/strong&gt;：&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;41-如何进入命令行模式&#34;&gt;&#xA;  4.1 如何进入命令行模式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#41-%e5%a6%82%e4%bd%95%e8%bf%9b%e5%85%a5%e5%91%bd%e4%bb%a4%e8%a1%8c%e6%a8%a1%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;我们正常启动流程，默认是直接跳过&lt;code&gt;Uboot&lt;/code&gt;命令行模式的，因为&lt;code&gt;Uboot&lt;/code&gt;主要的作用是引导&lt;code&gt;Kernel&lt;/code&gt;，一般我们不进行&lt;code&gt;uboot&lt;/code&gt;开发时，都默认跳过进入命令行模式。&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;font color = &#34;red&#34;&gt;&lt;strong&gt;那么，我们要想进入Uboot命令行模式，需要进行哪些配置呢？&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;打开我们准备好一份Uboot源码，进入menuconfig配置菜单，主要设置下列几个配置信息！&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;CONFIG_CMDLINE&lt;/code&gt;：命令行模式开关&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CONFIG_SYS_PROMPT&lt;/code&gt;：命令行模式提示符&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CONFIG_HUSH_PARSER&lt;/code&gt;：使用hush shell 来对命令进行解析&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;BOOTDELAY&lt;/code&gt;：设置启动延时&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xD;&#xA;&lt;blockquote class=&#39;book-hint &#39;&gt;&#xD;&#xA;  &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;：&lt;code&gt;meneconfig&lt;/code&gt;中查找苦难？实时&lt;code&gt;/&lt;/code&gt;符号，输入&lt;code&gt;1或2或3&lt;/code&gt;，直接查找指定标识。&lt;/p&gt;&#xD;&#xA;&lt;/blockquote&gt;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/202205311655629.png&#34; alt=&#34;image-20220531165504571&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;打开之后，重新编译，并将&lt;code&gt;Uboot&lt;/code&gt;镜像烧录到开发板中，再次启动，我们就能够看到倒计时。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;2022-03-02:13:33:47&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;U-Boot 2020.10-rc1-00043-ge62a6d17c6-dirty &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;Feb &lt;span style=&#34;color:#bd93f9&#34;&gt;08&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2022&lt;/span&gt; - 10:14:14 +0800&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;2022-03-02:13:33:47&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;2022-03-02:13:33:47&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;Model: xxxxxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;2022-03-02:13:33:47&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;MMC:   mmc1@xxxxxx: &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;2022-03-02:13:33:47&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;In:    serial&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;2022-03-02:13:33:47&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;Out:   serial&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;2022-03-02:13:33:47&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;Err:   serial&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;2022-03-02:13:33:47&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;Model: xxxxxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;2022-03-02:13:33:49&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;Hit any key to stop autoboot:  &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Hit any key to stop autoboot&lt;/code&gt;：我们在倒计时结束前，任意键入一个按键，即可进入！&lt;/p&gt;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;42-uboot基本命令解析&#34;&gt;&#xA;  4.2 &lt;code&gt;Uboot&lt;/code&gt;基本命令解析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#42-uboot%e5%9f%ba%e6%9c%ac%e5%91%bd%e4%bb%a4%e8%a7%a3%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;进入&lt;code&gt;Uboot&lt;/code&gt;命令行模式后，键入&lt;code&gt;help&lt;/code&gt;或者&lt;code&gt;?&lt;/code&gt;，可以查看所有支持的&lt;code&gt;Uboot&lt;/code&gt;命令。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://image-1305421143.cos.ap-nanjing.myqcloud.com/image/202205311702352.png&#34; alt=&#34;image-20220531170218298&#34; /&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
